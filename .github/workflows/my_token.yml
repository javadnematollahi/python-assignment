name: Run Python Script

on:
  workflow_dispatch:

env:
    my_token: ${{ secrets.TOKEN }}

jobs:
    run-python:
        runs-on: windows-latest
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3

            - name: Setup Python
              uses: actions/setup-python@v4
              with:
                python-version: 3.11

            - name: Run Python Script
              run: |
                pip install requests
                python telegrambot_classification.py
                
    run-python-via-powershell:
      needs: run-python
      runs-on: windows-latest
      steps:
        - name: Checkout Code
          uses: actions/checkout@v3
    
        - name: Run Python Script via Powershell
          shell: pwsh
          run: |
            python -m pip install requests
            python telegrambot_classification.py
        
    run-python-multiple-versions:
      needs: [run-python, run-python-via-powershell]
      runs-on: ${{ matrix.os }}
      strategy:
        max-parallel: 1
        matrix:
          os: [windows-latest]
          python-version: ['3.9', '3.10', '3.11']
        fail-fast: false

      steps:
        - name: Checkout Code
          uses: actions/checkout@v3
    
        - name: Setup Python Version ${{ matrix.python-version }}
          uses: actions/setup-python@v4.3.0
          id: setuppython
          with:
            python-version: ${{ matrix.python-version }}

        - uses: actions/cache@v3
          id: cache
          with:
            path: ${{ env.pythonLocation }}
            key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}-test1

        -  name: Install Dependencies
           if: steps.cache.outputs.cache-hit != 'true'
           run: pip install -r requirements.txt

        -  name: Run Python Script
           run:  python telegrambot_classification.py

    run-python-test2:
      needs: [run-python, run-python-via-powershell]
      runs-on: windows-latest
      steps:
        - uses: actions/checkout@v3
    
        - name: Setup Python Version ${{ matrix.python-version }}
          uses: actions/setup-python@v4.3.0
          with:
            python-version: '3.11'

        - name: Cache Dependencies
          uses: actions/cache@v3
          id: cache2
          with:
            path: ~\AppData\Local\pip\Cache
            key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
            restore-keys: |
              ${{ runner.os }}-pip-

        - name: Install Dependencies
          if: steps.cache2.outputs.cache-hit != 'true'
          run: pip install -r requirements.txt
      
            
